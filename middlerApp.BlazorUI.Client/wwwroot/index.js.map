{"version":3,"sources":["../node_modules/loadicons/index.js","index.ts"],"names":[],"mappings":";;;;AA0FA,IAAA,GA7EA,SAAA,EAAA,GACA,mBAAA,GAAA,EAAA,IAEA,EAAA,GAAA,GAEA,iBAAA,QAAA,OAAA,QAEA,OAAA,QAAA,IAIA,EAAA,UAAA,IAXA,CAaA,oBAAA,KAAA,KAAA,KAAA,WACA,SAAA,EAAA,GACA,EAAA,cAAA,EACA,IAAA,EAAA,IAAA,MAAA,GAEA,QAAA,MAAA,EAAA,YAEA,mBAAA,UACA,SAAA,GAsDA,OAXA,SAAA,EAAA,GAEA,IAAA,EAAA,IAAA,eACA,EAAA,KAAA,MAAA,GAAA,GACA,EAAA,iBAAA,OA3CA,SAAA,EAAA,GAGA,GAAA,MAAA,KAAA,QAAA,IAAA,KAAA,OAAA,CAMA,IAAA,EAAA,IAAA,UACA,IACA,IACA,EADA,EAAA,gBAAA,KAAA,aAAA,iBACA,WAEA,MAAA,GAEA,YADA,EAAA,sBAAA,GAKA,GAAA,QAAA,EAAA,SAEA,EAAA,MAAA,QAAA,OAEA,EAAA,aAAA,WAAA,GAGA,SAAA,KAAA,aAAA,EAAA,MAGA,mBAAA,GACA,EAAA,KAAA,IAIA,EAAA,kEA/BA,EAAA,0CAAA,KAAA,SAuCA,KAAA,EAAA,EAAA,IACA,EAAA,iBAAA,QAAA,SAAA,GACA,EAAA,oBAEA,EAAA;;ACzDA,aA1BA,QAAA,+DAGA,QAAA,+DAKA,QAAA,8DACA,QAAA,6DAIA,QAAA,0DACA,QAAA,gEACA,QAAA,0DACA,QAAA,4DACA,QAAA,6DACA,QAAA,2DAGA,QAAA,iBAEA,IAAM,EAAY,QAAQ,aAE1B,EAAU,uCACV,EAAU","file":"index.js","sourceRoot":"..\\src","sourcesContent":["/*\nCopyright 2018 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\n// UMD pattern via umdjs\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD\n    define([], factory);\n  }\n  else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like\n    module.exports = factory();\n  }\n  else {\n    // Browser\n    root.loadIcons = factory();\n  }\n}(typeof self !== 'undefined' ? self : this, function() {\n  function handleError(string) {\n    string = 'loadIcons: '+string;\n    var error = new Error(string);\n\n    console.error(error.toString());\n\n    if (typeof callback === 'function') {\n      callback(error);\n    }\n  }\n\n  function injectSVG(svgURL, callback) {\n    var error;\n    // 200 for web servers, 0 for CEP panels\n    if (this.status !== 200 && this.status !== 0) {\n      handleError('Failed to fetch icons, server returned ' + this.status);\n      return;\n    }\n\n    // Parse the SVG\n    var parser = new DOMParser();\n    try {\n      var doc = parser.parseFromString(this.responseText, 'image/svg+xml');\n      var svg = doc.firstChild;\n    }\n    catch (err) {\n      handleError('Error parsing SVG: ' + err);\n      return;\n    }\n\n    // Make sure a real SVG was returned\n    if (svg && svg.tagName === 'svg') {\n      // Hide the element\n      svg.style.display = 'none';\n\n      svg.setAttribute('data-url', svgURL);\n\n      // Insert it into the head\n      document.head.insertBefore(svg, null);\n\n      // Pass the SVG to the callback\n      if (typeof callback === 'function') {\n        callback(null, svg);\n      }\n    }\n    else {\n      handleError('Parsed SVG document contained something other than an SVG');\n    }\n  }\n\n  function loadIcons(svgURL, callback) {\n    // Request the SVG sprite\n    var req = new XMLHttpRequest();\n    req.open('GET', svgURL, true);\n    req.addEventListener('load', injectSVG.bind(req, svgURL, callback));\n    req.addEventListener('error', function(event) {\n      handleError('Request failed');\n    });\n    req.send();\n  }\n\n  return loadIcons;\n}));\n","\r\n// Include global variables first\r\nimport \"../node_modules/@spectrum-css/vars/dist/spectrum-global.css\";\r\n\r\n// Include only the scales your application needs\r\nimport \"../node_modules/@spectrum-css/vars/dist/spectrum-medium.css\";\r\n//import \"../node_modules/@spectrum-css/vars/dist/spectrum-large.css\";\r\n\r\n// Include only the colorstops your application needs\r\n//import \"../node_modules/@spectrum-css/vars/dist/spectrum-lightest.css\";\r\nimport \"../node_modules/@spectrum-css/vars/dist/spectrum-light.css\";\r\nimport \"../node_modules/@spectrum-css/vars/dist/spectrum-dark.css\";\r\n//import \"../node_modules/@spectrum-css/vars/dist/spectrum-darkest.css\";\r\n\r\n// Include index-vars.css for all components you need\r\nimport \"../node_modules/@spectrum-css/page/dist/index-vars.css\";\r\nimport \"../node_modules/@spectrum-css/typography/dist/index-vars.css\";\r\nimport \"../node_modules/@spectrum-css/icon/dist/index-vars.css\";\r\nimport \"../node_modules/@spectrum-css/button/dist/index-vars.css\";\r\nimport \"../node_modules/@spectrum-css/sidenav/dist/index-vars.css\";\r\nimport \"../node_modules/@spectrum-css/table/dist/index-vars.css\";\r\n\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst loadIcons = require('loadicons');\r\n\r\nloadIcons('assets/icons/spectrum-css-icons.svg')\r\nloadIcons('assets/icons/spectrum-icons.svg');\r\n"]}